@using RacingSite.Hubs
@model object

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/js/signalr.js"></script>

    <script>
        const tableId = "racers-info";

        let connection = new signalR.HubConnectionBuilder()
            .withUrl("/@HubConstants.RaceHub",
                { transport: signalR.HttpTransportType.WebSockets | signalR.HttpTransportType.LongPolling })
            .configureLogging(signalR.LogLevel.Error)
            .build();

        connection.on('@HubConstants.OnRaceInit', data => onRaceStart(data));
        connection.on('@HubConstants.OnCheckpointPassed', data => onCheckpointPassed(data));
        connection.start().then(() => console.log("Connected"));

        function onRaceStart(race) {
            removeTable();
            $('#race-title').text(`Real time. You are watching race '${race.name}'`);
        }

        function onCheckpointPassed(data) {
            removeTable();
            createTable(data, tableId).appendTo('#dynamicTable');
        }

        function removeTable() {
            $(`#${tableId}`).remove();
        }

        function createTable(data, tableId) {
            var table = $('<table>').attr("id", tableId);
            table.append('<thead>').children('thead').append('<tr />').children('tr')
                .append('<th>Racer</th>')
                .append('<th>Start</th>')
                .append('<th>Last passed checkpoint</th>')
                .append('<th>Last passed checkpoint time</th>')
                .append('<th>Time in race</th>');

            var $tbody = table.append('<tbody />').children('tbody');

            for (var i = 0; i < data.length; i++) {
                let info = data[i];
                $tbody.append('<tr />').children('tr:last')
                    .append(`<td>${info.racer.name}</td>`)
                    .append(`<td>${changeTimeFormat(info.start)}</td>`)
                    .append(`<td>${info.passedCheckpoint.name}</td>`)
                    .append(`<td>${changeTimeFormat(info.checkpointPassedTime)}</td>`)
                    .append(`<td>${timeSpanToString(info.timeInRace)}</td>`);
            }

            return table;
        }

        function changeTimeFormat(time) {
            let date = new Date(time);
            return date.getHours() + ":" + date.getMinutes() + ":" + date.getSeconds() 
        }

        function timeSpanToString(timeSpan) {
            return `${timeSpan.minutes} m, ${timeSpan.seconds} s, ${timeSpan.milliseconds} ms`;
        }

    </script>
}

<h1 id="race-title">No races now</h1>

<div id="dynamicTable">

</div>

<style>
    #racers-info {
        font-family: Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

    #racers-info td, 
    #racers-info th {
        border: 1px solid #ddd;
        padding: 8px;
    }

    #racers-info tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    #racers-info tr:hover {
        background-color: #ddd;
    }

    #racers-info th {
        padding-top: 12px;
        padding-bottom: 12px;
        text-align: left;
        background-color: #4CAF50;
        color: white;
    }
</style>